import numpy as np
import pandas as pd
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Exercise 1:

boston = load_boston()
X = pd.DataFrame(boston.data, columns=boston.feature_names)
y = pd.Series(boston.target, name='MEDV')
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


# Exercise 2:

model = LinearRegression()
model.fit(X_train, y_train)


# Exercise 3:

y_pred = model.predict(X_test)


# Exercise 4:

mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)


# Exercise 5:

r2 = model.score(X_test, y_test)
print("R-squared Value:", r2)


# Exercise 6:

plt.scatter(y_test, y_pred)
plt.xlabel("Actual Values")
plt.ylabel("Predicted Values")
plt.title("Actual vs Predicted Values")
plt.show()


# Exercise 7:

plt.scatter(y_test, y_pred)
plt.xlabel("Actual Values")
plt.ylabel("Predicted Values")
plt.title("Predicted vs Actual Values")
plt.show()


# Exercise 8:
coefficients = pd.Series(model.coef_, index=X.columns)
print("Coefficients:\n", coefficients)
